{"version":3,"sources":["redux/types/UserManagementTypes.js","redux/actions/UserManagementActions.js","StyledComponents/Button.js","StyledComponents/Label.js","StyledComponents/Dropdown.js","StyledComponents/Form.js","StyledComponents/Headings.js","StyledComponents/TextFields.js","Themes/AdminTheme.js","Themes/ThemeManager.js","Themes/CustomerTheme.js","StyledComponents/ErrorMess.js","Common/CommonConstant.js","Components/RegisterForm.js","StyledComponents/Table.js","StyledComponents/UserListContainer.js","Components/UserList.js","Components/UserManagement.js","App.js","reportWebVitals.js","redux/reducers/UserManagementReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["CHANGE_THEME","REGISTER","DELETE_USER","EDIT_USER","UPDATE_USER","registerAction","newUser","type","deleteUserAction","userId","editUserAction","user","Button","styled","button","props","theme","btnColor","color","hoverTextColor","hoverBgColor","Label","span","Select","select","textFieldBg","Dropdown","label","Form","form","bgColor","Heading3","h1","headingColor","h2","h3","Heading4","h4","h5","Input","input","TextField","AdminTheme","borderButton","borderColor","tableTextColor","arrTheme","id","name","ErrorMess","labels","userAccount","fullName","password","phoneNumber","email","REGEX_EMAIL","REGEX_PASSWORD","REGEX_PHONE_NUMBER","RegisterForm","state","values","userType","errors","handleChangeValue","event","target","value","newValue","newErrors","setState","handleSubmit","preventDefault","isValid","key","userList","findIndex","test","Swal","fire","title","icon","confirmButtonText","dispatch","renderTheme","map","index","autoComplete","onSubmit","this","className","placeholder","onChange","e","find","themeId","disable","disabled","onClick","prevProps","prevState","userEdit","Component","connect","UserManagementReducer","Table","table","Thead","thead","Tbody","tbody","Tr","tr","Td","td","Th","th","UserListContainer","div","UserList","renderUserList","style","verticalAlign","UserManagement","themeUserManagement","background","padding","height","minHeight","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","length","newUserList","push","filter","userListUpdate","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbd5691a.chunk.js","sourcesContent":["export const CHANGE_THEME = 'CHANGE_THEME';\nexport const REGISTER = 'REGISTER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const EDIT_USER = 'EDIT_USER';\nexport const UPDATE_USER = 'UPDATE_USER'","import {  CHANGE_THEME, DELETE_USER, EDIT_USER, REGISTER, UPDATE_USER } from \"../types/UserManagementTypes\";\n\nexport const changeThemeAction = (themeId) => {\n    return {\n        type: CHANGE_THEME,\n        themeId\n    }\n}\n\nexport const registerAction = (newUser) => {\n    return {\n        type: REGISTER,\n        newUser\n    }\n}\n\nexport const deleteUserAction = (userId) => ({\n    type: DELETE_USER,\n    userId\n}) \n\nexport const editUserAction = (user) => ({\n    type: EDIT_USER,\n    user\n})\n\nexport const updateUserAction = (user) => ({\n    type: UPDATE_USER,\n    user\n})","import styled from 'styled-components'\r\n//----------------button-------------------\r\nexport const Button = styled.button`\r\n    font-family: 'Poppins', sans-serif;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    background-color: ${props => props.theme.btnColor};\r\n    color: ${props => props.theme.color};\r\n    margin-top: 25px;\r\n    margin-right: 15px;\r\n    border-radius: 12px;\r\n    border: 0;\r\n    box-sizing: border-box;\r\n    padding: 4px 20px 0;\r\n    text-align: center;\r\n    text-vertical-align: center;\r\n    transition: all .5s;\r\n    height: calc(1.5em + .75rem + 8px);\r\n    width: 100px;\r\n    cursor: pointer;\r\n    &:hover:enabled {\r\n        color: ${props => props.theme.hoverTextColor};\r\n        background-color:${props => props.theme.hoverBgColor};\r\n    };\r\n    &:disabled {\r\n        cursor:auto;\r\n        color: ${props => props.theme.color};\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Label = styled.span`\r\nfont-family: 'Poppins', sans-serif;\r\ncolor:${props => props.theme.color};\r\npadding-top:10px;\r\npadding-bottom:5px;\r\nopacity:0.8;\r\nwidth:auto;\r\nfloat: left\r\n`","import styled from 'styled-components';\r\nimport { Label } from './Label';\r\n\r\nexport const Select = styled.select`\r\n    font-family: 'Poppins', sans-serif;\r\n    width: 100%;\r\n    height: calc(1.5em + .75rem + 8px);\r\n    padding: 4px 20px 0;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    color:  ${props => props.theme.color};\r\n    background-color: ${props => props.theme.textFieldBg};\r\n    box-sizing: border-box;\r\n    border: 0;\r\n    border-radius: 12px;\r\n    appearance: none;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    /* Adding transition effect */\r\n    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\r\n    transition: color 0.3s ease, background-color 0.3s ease, border-bottom-color 0.3s ease;\r\n    &:hover {\r\n        color: ${props => props.theme.hoverTextColor};\r\n        background-color: ${props=>props.theme.hoverBgColor};\r\n        border-bottom-color: #DCDCDC;\r\n    }\r\n    &:focus {\r\n        outline: none; \r\n    }\r\n`\r\n\r\n\r\n\r\n\r\nexport const Dropdown = ({ label, ...props }) => {\r\n    return <span>\r\n        <Label>\r\n            {label}\r\n        </Label>\r\n        <br/>\r\n        <Select {...props} />\r\n    </span>\r\n}","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\nmargin: 30px 0 0 0;\r\nbackground-color: ${props => {return props.theme.bgColor}};\r\nbox-sizing: border-box;\r\npadding: 20px;\r\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.2);\r\n`","import styled from 'styled-components';\r\n\r\nexport const Heading1 = styled.h1`\r\n    padding: 15px;\r\n    margin-top:0;\r\n    font-size:4rem;\r\n    font-weight:300;\r\n    line-height:1.2;\r\n    color: ${props => {return props.theme.headingColor}}\r\n`\r\n\r\nexport const Heading2 = styled.h2`\r\n    padding: 15px;\r\n    margin-top:0;\r\n    font-size:3rem;\r\n    font-weight:300;\r\n    line-height:1.2;\r\n    color: ${props => {return props.theme.headingColor}}\r\n`\r\n\r\nexport const Heading3 = styled.h3`\r\n    font-family: 'Poppins', sans-serif;\r\n    padding: 15px;\r\n    margin-top:0;\r\n    font-size:2rem;\r\n    font-weight:700;\r\n    line-height:1.2;\r\n    color: ${props => {return props.theme.headingColor}}\r\n`\r\n\r\nexport const Heading4 = styled.h4`\r\n    font-family: 'Poppins', sans-serif;\r\n    padding: 15px;\r\n    margin-top:0;\r\n    font-size:1rem;\r\n    font-weight:600;\r\n    line-height:1.2;\r\n    color: ${props => {return props.theme.headingColor}};\r\n    background-color: ${props => {return props.theme.bgColor}}\r\n    \r\n`\r\n\r\nexport const Heading5 = styled.h5`\r\n    padding: 15px;\r\n    margin-top:0;\r\n    font-size:0.5rem;\r\n    font-weight:300;\r\n    line-height:1.2;\r\n    color: ${props => {return props.theme.headingColor}};\r\n    background-color: ${props => {return props.theme.bgColor}}\r\n\r\n`\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Label } from './Label';\r\n\r\nconst Input = styled.input`\r\n    font-family: 'Poppins', sans-serif;\r\n    width: 100%;\r\n    height: calc(1.5em + .75rem + 8px);\r\n    padding: 4px 20px 0;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    color:  ${props => props.theme.color};\r\n    background-color: ${props => props.theme.textFieldBg} !important;\r\n    box-sizing: border-box;\r\n    border: 0 !important;\r\n    border-radius: 12px;\r\n    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\r\n    /* Autocomplete styles in Chrome*/\r\n    &:-webkit-autofill {\r\n        transition: 5000s ease-in-out 0s;\r\n    }\r\n    &:hover {\r\n        border: 1px solid ${props => props.theme.color};\r\n    }\r\n    &:focus {\r\n        outline: none; \r\n        border: 1px solid ${props => props.theme.color} !important;\r\n    }\r\n  \r\n`\r\n\r\nexport const TextField = ({ label, ...props }) => {\r\n    return <span>\r\n        <Label>\r\n            {label}\r\n        </Label>\r\n        <br />\r\n        <Input {...props} />\r\n    </span>\r\n}\r\n","export const AdminTheme = {\r\n    bgColor: '#15172b',\r\n    btnColor: '#08d',\r\n    color:'#eee',\r\n    headingColor: '#fff',\r\n    borderButton: '1px solid #fff',\r\n    hoverTextColor: '#343a40',\r\n    hoverBgColor:'#fff',\r\n    borderColor:'#343a40',\r\n    textFieldBg: '#303245',\r\n    tableTextColor: '#15172b'\r\n}\r\n","import { AdminTheme } from './AdminTheme'\r\nimport { CustomerTheme } from './CustomerTheme'\r\n\r\nexport const arrTheme = [\r\n    {\r\n        id: '1',\r\n        name: 'Admin',\r\n        theme: AdminTheme\r\n    }\r\n    ,\r\n    {\r\n        id: '2',\r\n        name: 'Customer',\r\n        theme: CustomerTheme\r\n    }\r\n]","export const CustomerTheme = {\r\n    bgColor: 'rgba(254,218,203,.7)',\r\n    btnColor: 'rgb(242,152,144)',\r\n    color:'#000 !important',\r\n    headingColor: '#000',\r\n    borderButton: '1px solid #7952b3',\r\n    hoverTextColor: '#fff',\r\n    hoverBgColor:'rgb(162,162,162)',\r\n    borderColor:'rgba(191,112,107,.8)',\r\n    textFieldBg: 'white !important',\r\n    tableTextColor: '#15172b'\r\n}","import styled from 'styled-components';\r\n\r\nexport const ErrorMess = styled.span`\r\nfont-family: 'Poppins', sans-serif;\r\ncolor:red;\r\nfont-size: 12px;\r\nheight: 50px\r\n`","export const labels = {\r\n    userAccount: 'User Account',\r\n    fullName: 'Full Name',\r\n    password: 'Password',\r\n    phoneNumber: 'Phone Number',\r\n    email: 'Email'\r\n}\r\n\r\nexport const REGEX_EMAIL = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nexport const REGEX_PASSWORD = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d$@$!%*?&.]{5,10}$/;\r\nexport const REGEX_PHONE_NUMBER = /^[0-9]+$/;","import React, { Component } from 'react'\r\nimport { changeThemeAction, registerAction, updateUserAction } from '../redux/actions/UserManagementActions'\r\nimport { Button } from '../StyledComponents/Button'\r\nimport { Dropdown } from '../StyledComponents/Dropdown'\r\nimport { Form } from '../StyledComponents/Form'\r\nimport { Heading3 } from '../StyledComponents/Headings'\r\nimport { TextField } from '../StyledComponents/TextFields'\r\nimport { arrTheme } from '../Themes/ThemeManager'\r\nimport { connect } from 'react-redux';\r\nimport Swal from 'sweetalert2'\r\nimport { ErrorMess } from '../StyledComponents/ErrorMess'\r\nimport { labels, REGEX_EMAIL, REGEX_PASSWORD, REGEX_PHONE_NUMBER } from '../Common/CommonConstant'\r\n\r\nclass RegisterForm extends Component {\r\n    state = {\r\n        values: {\r\n            id:'',\r\n            userAccount: '',\r\n            fullName: '',\r\n            password: '',\r\n            phoneNumber: '',\r\n            email: '',\r\n            userType: 'Admin'\r\n        },\r\n        errors: {\r\n            userAccount: '',\r\n            fullName: '',\r\n            password: '',\r\n            phoneNumber: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n    handleChangeValue = (event) => {\r\n\r\n        let { name, value } = event.target;\r\n\r\n        let newValue = { ...this.state.values, [name]: value };\r\n        let newErrors = { ...this.state.errors, [name]: '' };\r\n\r\n        this.setState({\r\n            values: newValue,\r\n            errors: newErrors\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        //Prevent reloading page when submit\r\n        event.preventDefault();\r\n        //Get information inputted by user\r\n        let { values } = this.state;\r\n\r\n        let newErrors = { ...this.state.errors };\r\n\r\n        //Validate before submitting\r\n        let isValid = true;\r\n        for (let key in values) {\r\n            //Validate user account\r\n            if (key === 'userAccount' && values[key] !== '') {\r\n                let index = this.props.userList.findIndex(user => user.userAccount === values[key]);\r\n                if (index !== -1) {\r\n                    newErrors[key] = labels[key] + ' already exists!';\r\n                    isValid = false;\r\n                }\r\n            }\r\n\r\n            //Validate required fields\r\n            if (key !== 'id' && values[key] === '') {\r\n                newErrors[key] = labels[key] + ' is required!';\r\n                isValid = false;\r\n            }\r\n\r\n            //Validate email\r\n            if (key === 'email' && values[key] !== '') {\r\n                if (!REGEX_EMAIL.test(values[key])) { //Invalid email\r\n                    newErrors[key] = labels[key] + ' is invalid!';\r\n                    isValid = false;\r\n                }\r\n            }\r\n\r\n            //Validate password\r\n            if (key === 'password' && values[key] !== '') {\r\n                if (!REGEX_PASSWORD.test(values[key])) { //Invalid password\r\n                    newErrors[key] = labels[key] + ' must be 5-10 characters, contain at least one letter and one number!';\r\n                    isValid = false;\r\n                }\r\n            }\r\n\r\n            //Validate phone number\r\n            if (key === 'phoneNumber' && values[key] !== '') {\r\n                if (!REGEX_PHONE_NUMBER.test(values[key])) { //Invalid phone number\r\n                    newErrors[key] = labels[key] + ' is invalid!';\r\n                    isValid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        //Failed\r\n        if (!isValid) {\r\n            this.setState({\r\n                errors: newErrors\r\n            })\r\n            Swal.fire({\r\n                title: 'Registration failed!',\r\n                icon: 'error', //success, error, warning, question\r\n                confirmButtonText: 'OK'\r\n            })\r\n            return;\r\n        }\r\n\r\n        //Create new user object\r\n        let newUser = {\r\n            id: '1',\r\n            userAccount: values.userAccount,\r\n            fullName: values.fullName,\r\n            password: values.password,\r\n            phoneNumber: values.phoneNumber,\r\n            email: values.email,\r\n            userType: values.userType\r\n        }\r\n        //Dispatch register action to producer\r\n        this.props.dispatch(registerAction(newUser))\r\n\r\n        //Success\r\n        Swal.fire({\r\n            title: 'Registration successful!',\r\n            icon: 'success', //success, error, warning, question\r\n            confirmButtonText: 'OK'\r\n        });\r\n    }\r\n\r\n    renderTheme = () => {\r\n        return arrTheme.map((theme, index) => {\r\n            return <option key={index} value={theme.id}>{theme.name}</option>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n                    <Heading3>Registration Form</Heading3>\r\n                    <div className=\"p-1\">\r\n                        <div className=\"row m-2\">\r\n                            <div className=\"col-6\">\r\n                                <TextField name=\"userAccount\" label=\"User Account\" placeholder=\"Enter user account\"\r\n                                    value={this.state.values.userAccount} onChange={this.handleChangeValue} />\r\n                                <ErrorMess>{this.state.errors.userAccount}</ErrorMess>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <TextField name=\"fullName\" label=\"Full Name\" placeholder=\"Enter full name\"\r\n                                    value={this.state.values.fullName} onChange={this.handleChangeValue} />\r\n                                <ErrorMess>{this.state.errors.fullName}</ErrorMess>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row m-2\">\r\n                            <div className=\"col-6\">\r\n                                <TextField name=\"password\" label=\"Password\" type=\"password\" placeholder=\"Enter password\"\r\n                                    value={this.state.values.password} onChange={this.handleChangeValue} />\r\n                                <ErrorMess>{this.state.errors.password}</ErrorMess>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <TextField name=\"phoneNumber\" label=\"Phone Number\" placeholder=\"Enter phone number\"\r\n                                    value={this.state.values.phoneNumber} onChange={this.handleChangeValue} />\r\n                                <ErrorMess>{this.state.errors.phoneNumber}</ErrorMess>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row m-2\">\r\n                            <div className=\"col-6\">\r\n                                <TextField name=\"email\" label=\"Email\" placeholder=\"Enter email\"\r\n                                    value={this.state.values.email} onChange={this.handleChangeValue} />\r\n                                <ErrorMess>{this.state.errors.email}</ErrorMess>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <Dropdown value={arrTheme.findIndex(theme => theme.name === this.state.values.userType) + 1} name=\"userType\" label=\"User Type\" onChange={(e) => {\r\n                                    let { name, value } = e.target;\r\n                                    this.setState({\r\n                                        values: { ...this.state.values, [name]: arrTheme.find(theme => theme.id === value).name }\r\n                                    }, () => {\r\n                                        this.props.dispatch(changeThemeAction(value))\r\n                                    })\r\n                                }}>\r\n                                    {this.renderTheme()}\r\n                                </Dropdown>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row m-2\">\r\n                            <div className=\"col-6\">\r\n                                {this.props.disable ? <Button className=\"btn\" disabled>Register</Button> : <Button className=\"btn\" >Register</Button>}\r\n                                {this.props.disable ? <Button className=\"btn\" onClick={() => {this.props.dispatch(updateUserAction(this.state.values))}} type=\"button\">Update</Button> : <Button className=\"btn\"  type=\"button\" disabled>Update</Button>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.userEdit.id !== this.props.userEdit.id) {\r\n            this.setState({\r\n                values: this.props.userEdit\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userList: state.UserManagementReducer.userList,\r\n        userEdit: state.UserManagementReducer.userEdit,\r\n        disable: state.UserManagementReducer.disable\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(RegisterForm)\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const Table = styled.table`\r\n    color: ${props => props.theme.tableTextColor};\r\n    width: 100%;\r\n    max-width: 100%;\r\n    border-spacing: 2px;\r\n    background: rgba(255, 255, 255, .3);\r\n  \r\n`\r\nexport const Thead = styled.thead`\r\n    display: table-header-group;\r\n    vertical-align: middle;\r\n    color: ${props => {return props.theme.bgColor}};\r\n\r\n`\r\n\r\nexport const Tbody = styled.tbody`\r\n    display: table-row-group;\r\n    vertical-align: middle;\r\n    border-color: inherit;\r\n`\r\nexport const Tr = styled.tr`\r\n    display: table-row;\r\n    vertical-align: inherit;\r\n    border-top: 1px solid ${props => props.theme.borderColor} !important;\r\n    border-bottom: 1px solid ${props => props.theme.borderColor} !important;\r\n\r\n`\r\nexport const Td = styled.td`\r\n    padding: .75rem;\r\n    vertical-align: middle;\r\n    border-top: 1px solid ${props => props.theme.borderColor} !important;\r\n    border-bottom: 1px solid ${props => props.theme.borderColor} !important;\r\n`\r\n\r\n\r\nexport const Th = styled.th`\r\n    color: ${props => props.theme.bgColor};\r\n    vertical-align: bottom;\r\n    text-align: inherit;\r\n    border-top: 2px solid ${props => props.theme.borderColor} !important;\r\n    border-bottom: 2px solid ${props => props.theme.borderColor} !important;\r\n    color: ${props => props.theme.headingColor};\r\n    background-color: ${props => {return props.theme.bgColor}};\r\n    opacity: 0.7;\r\n    padding: .75rem;\r\n    vertical-align: top;\r\n`\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const UserListContainer = styled.div`\r\nbackground: transparent;\r\nborder-radius: 0;\r\nbox-shadow: 0 4px 8px 0 rgba(123, 0, 0, 0.19), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n`","import React, { Component } from 'react'\r\nimport { Heading4 } from '../StyledComponents/Headings'\r\nimport { Table, Tbody, Td, Th, Thead, Tr } from '../StyledComponents/Table'\r\nimport { UserListContainer } from '../StyledComponents/UserListContainer'\r\nimport { connect } from 'react-redux'\r\nimport { deleteUserAction, editUserAction } from '../redux/actions/UserManagementActions'\r\n\r\nclass UserList extends Component {\r\n    renderUserList = () => {\r\n        return this.props.userList.map((user, index) => {\r\n            return <Tr key={index}>\r\n                <Td style={{ verticalAlign: 'middle' }}>{user.id}</Td>\r\n                <Td style={{ verticalAlign: 'middle' }}>{user.userAccount}</Td>\r\n                <Td style={{ verticalAlign: 'middle' }}>{user.fullName}</Td>\r\n                <Td style={{ verticalAlign: 'middle' }}>{user.password}</Td>\r\n                <Td style={{ verticalAlign: 'middle' }}>{user.email}</Td>\r\n                <Td style={{ verticalAlign: 'middle' }}>{user.phoneNumber}</Td>\r\n                <Td style={{ verticalAlign: 'middle' }}>{user.userType}</Td>\r\n                <Td style={{ verticalAlign: 'middle' }}>\r\n                    <button className=\"btn btn-dark text-white\" onClick={() => {\r\n                        this.props.dispatch(editUserAction(user))\r\n                    }}><i className=\"fa fa-edit\"></i></button>\r\n\r\n                    <button className=\"btn btn-dark text-white ml-2\" onClick={() => {\r\n                        this.props.dispatch(deleteUserAction(user.id))\r\n                    }}><i className=\"fa fa-trash\"></i></button>\r\n                </Td>\r\n            </Tr>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div><br />\r\n                <UserListContainer className=\"card\">\r\n                    <Heading4>User List</Heading4>\r\n                    <div className=\"card-body\">\r\n                        <Table className=\"table\" >\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>No</Th>\r\n                                    <Th>Account</Th>\r\n                                    <Th>Full Name</Th>\r\n                                    <Th>Password</Th>\r\n                                    <Th>Email</Th>\r\n                                    <Th>Phone Number</Th>\r\n                                    <Th>User Type</Th>\r\n                                    <Th></Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {this.renderUserList()}\r\n                            </Tbody>\r\n                        </Table>\r\n                    </div>\r\n\r\n                </UserListContainer>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userList: state.UserManagementReducer.userList\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(UserList)\r\n","import React, { Component } from 'react'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport RegisterForm from './RegisterForm'\r\nimport UserList from './UserList'\r\nimport { connect } from 'react-redux'\r\nimport { AdminTheme } from '../Themes/AdminTheme'\r\n\r\nclass UserManagement extends Component {\r\n    state = {\r\n        themeUserManagement: AdminTheme\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: 'linear-gradient(to top,#fbc2eb 0%,#a18cd1 100%)', padding: '10px 0', height: '100%', minHeight: '100vh' }}>\r\n                <ThemeProvider theme={this.props.themeUserManagement}>\r\n                    <div className=\"container-fluid w-75\">\r\n                        <RegisterForm />\r\n                        <UserList />\r\n                    </div>\r\n                </ThemeProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        themeUserManagement: state.UserManagementReducer.themeUserManagement\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(UserManagement)\r\n","import UserManagement from \"./Components/UserManagement\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserManagement />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AdminTheme } from \"../../Themes/AdminTheme\"\nimport { arrTheme } from \"../../Themes/ThemeManager\";\nimport { CHANGE_THEME, DELETE_USER, EDIT_USER, REGISTER, UPDATE_USER } from \"../types/UserManagementTypes\";\n\nconst initialState = {\n    disable: false,\n    themeUserManagement: AdminTheme,\n    userList: [{\n        id: '1',\n        userAccount: 'NhuTTQ3',\n        fullName: 'Trinh Thi Quynh Nhu',\n        password: 'nhu18tuoi',\n        phoneNumber: '0123456789',\n        email: 'qnhu96@gmail.com',\n        userType: 'Admin'\n    }\n    ],\n    userEdit: {\n        id: '0',\n        userAccount: '',\n        fullName: '',\n        password: '',\n        phoneNumber: '',\n        email: '',\n        userType: ''\n    },\n}\n\n\nconst UserManagementReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_THEME: {\n            //Find theme based on selected action.themeId\n            let theme = arrTheme.find(theme => theme.id === action.themeId);\n            if (theme) {\n                //Set theme for state.themeToDoList\n                state.themeUserManagement = { ...theme.theme };\n            }\n            return { ...state };\n        }\n        case REGISTER: {\n            let newUser = { ...action.newUser, id: state.userList.length + 1 };\n            let newUserList = [...state.userList];\n            newUserList.push(newUser);\n\n            //Assign new user list to current user list\n            state.themeUserManagement = AdminTheme;\n            state.userList = newUserList;\n            state.userEdit = {\n                id: '-1',\n                userAccount: '',\n                fullName: '',\n                password: '',\n                phoneNumber: '',\n                email: '',\n                userType: ''\n            }\n            return { ...state }\n        }\n        case DELETE_USER: {\n            return { ...state, userList: state.userList.filter(user => user.id !== action.userId) }\n        }\n        case EDIT_USER: {\n            let theme = arrTheme.find(theme => theme.name === action.user.userType);\n            if (state.userEdit.id !== action.user.id) {\n                if (theme) {\n                    //Set theme\n                    state.themeUserManagement = { ...theme.theme };\n                }\n            }\n            return { ...state, userEdit: action.user, disable: true }\n        }\n        case UPDATE_USER: {\n            //Find user in user list\n            let userListUpdate = [...state.userList];\n\n            let index = userListUpdate.findIndex(user => user.id === action.user.id);\n            if (index !== -1) {\n                userListUpdate[index] = action.user;\n            }\n            state.themeUserManagement = AdminTheme;\n            state.userEdit = {\n                id: '-1',\n                userAccount: '',\n                fullName: '',\n                password: '',\n                phoneNumber: '',\n                email: '',\n                userType: ''\n            }\n            return { ...state, userList: userListUpdate, disable: false }\n        }\n        default:\n            return { ...state }\n    }\n}\n\nexport default UserManagementReducer;\n","import { combineReducers } from 'redux';\nimport UserManagementReducer from './UserManagementReducer'\n\nexport const rootReducer = combineReducers({\n    UserManagementReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { rootReducer } from './redux/reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}